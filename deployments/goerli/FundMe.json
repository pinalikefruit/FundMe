{
  "address": "0x1B6f3eF82B9ada803da07384d3C38dbC1C2C2fD0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x27de8ea0610467e75fa7fc1bcf84fb2aefe344b8033fd2b7361a73a0da838a2c",
  "receipt": {
    "to": null,
    "from": "0x55BD7E92250903186CEb3938c70F103654a38De1",
    "contractAddress": "0x1B6f3eF82B9ada803da07384d3C38dbC1C2C2fD0",
    "transactionIndex": 89,
    "gasUsed": "1057395",
    "logsBloom": "0x
    "blockHash": "0x3146b76d0f71ebb3dfc4afd81748bd2138abf489f293afb13e4ea2040af8553b",
    "transactionHash": "0x27de8ea0610467e75fa7fc1bcf84fb2aefe344b8033fd2b7361a73a0da838a2c",
    "logs": [],
    "blockNumber": 8134184,
    "cumulativeGasUsed": "28881263",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 1,
  "solcInputHash": "d714bec119b63f7fbd92a586a0b9b4ca",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getAddressToAmountFunded(address)\":{\"params\":{\"fundingAddress\":\"the addres of funder\"},\"returns\":{\"_0\":\"the amount fundend\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"notice funds our contract based on the ETH/USD price\"},\"getAddressToAmountFunded(address)\":{\"notice\":\"gets the amount that an address has funded\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// / @title a simple fund me contract\\n// / @author Jos\\u00e9 Pi\\u00f1a\\n// / @notice This contract is for creating a sample funding contract\\n// / @dev This implement price feed as our library\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    // Type Declarations\\n    using PriceConverter for uint256;\\n\\n    // State variables\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n    uint256 public constant MINIMUM_USD = 50e18;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    //Modifier\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeed) {\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n        i_owner = msg.sender;\\n    }\\n\\n    /// notice funds our contract based on the ETH/USD price\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder];\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    /** @notice gets the amount that an address has funded\\n     *  @param fundingAddress the addres of funder\\n     *  @return the amount fundend\\n     */\\n\\n    function getAddressToAmountFunded(\\n        address fundingAddress\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[fundingAddress];\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x28dc345b456986bb3270ec6889f2e6ca664c5133e9863e28e4b6a1697335ff27\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xbdef819fde9ce9336190304d93342d023f6bad1db4345127dadae30799b44b3e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200134d3803806200134d8339818101604052810190620000379190620000cc565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000151565b600081519050620000c68162000137565b92915050565b600060208284031215620000e557620000e462000132565b5b6000620000f584828501620000b5565b91505092915050565b60006200010b8262000112565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014281620000fe565b81146200014e57600080fd5b50565b60805160601c6111c16200018c600039600081816102da0152818161046e015281816105140152818161069c015261088e01526111c16000f3fe6080604052600436106100865760003560e01c8063893d20e811610059578063893d20e8146101355780639e87a5cd14610160578063b60d42881461018b578063be2693f014610195578063d7b4750c146101ac57610086565b80630343fb251461008b5780630d8e6e2c146100c85780633ccfd60b146100f35780636b69a5921461010a575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b58565b6101e9565b6040516100bf9190610d38565b60405180910390f35b3480156100d457600080fd5b506100dd610232565b6040516100ea9190610d38565b60405180910390f35b3480156100ff57600080fd5b506101086102d8565b005b34801561011657600080fd5b5061011f610503565b60405161012c9190610d38565b60405180910390f35b34801561014157600080fd5b5061014a610510565b6040516101579190610ce2565b60405180910390f35b34801561016c57600080fd5b50610175610538565b6040516101829190610cfd565b60405180910390f35b610193610561565b005b3480156101a157600080fd5b506101aa61069a565b005b3480156101b857600080fd5b506101d360048036038101906101ce9190610b85565b610924565b6040516101e09190610ce2565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561029b57600080fd5b505afa1580156102af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d39190610bb2565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60028054905081101561040957600060028281548110610383576103826110a0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040190610ff9565b915050610360565b50600067ffffffffffffffff811115610425576104246110cf565b5b6040519080825280602002602001820160405280156104535781602001602082028036833780820191505090505b5060029080519060200190610469929190610a48565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104b090610ccd565b60006040518083038185875af1925050503d80600081146104ed576040519150601f19603f3d011682016040523d82523d6000602084013e6104f2565b606091505b505090508061050057600080fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b188000061059e60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461096c90919063ffffffff16565b10156105df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d690610d18565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461062e9190610d6f565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461071f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060028054806020026020016040519081016040528092919081815260200182805480156107a357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610759575b5050505050905060005b81518110156108295760008282815181106107cb576107ca6110a0565b5b60200260200101519050600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205050808061082190610ff9565b9150506107ad565b50600067ffffffffffffffff811115610845576108446110cf565b5b6040519080825280602002602001820160405280156108735781602001602082028036833780820191505090505b5060029080519060200190610889929190610a48565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108d090610ccd565b60006040518083038185875af1925050503d806000811461090d576040519150601f19603f3d011682016040523d82523d6000602084013e610912565b606091505b505090508061092057600080fd5b5050565b60006002828154811061093a576109396110a0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610978836109a8565b90506000670de0b6b3a764000085836109919190610f0d565b61099b9190610dc5565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109f157600080fd5b505afa158015610a05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a299190610bdf565b5050509150506402540be40081610a409190610df6565b915050919050565b828054828255906000526020600020908101928215610ac1579160200282015b82811115610ac05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a68565b5b509050610ace9190610ad2565b5090565b5b80821115610aeb576000816000905550600101610ad3565b5090565b600081359050610afe8161112f565b92915050565b600081519050610b1381611146565b92915050565b600081359050610b288161115d565b92915050565b600081519050610b3d8161115d565b92915050565b600081519050610b5281611174565b92915050565b600060208284031215610b6e57610b6d6110fe565b5b6000610b7c84828501610aef565b91505092915050565b600060208284031215610b9b57610b9a6110fe565b5b6000610ba984828501610b19565b91505092915050565b600060208284031215610bc857610bc76110fe565b5b6000610bd684828501610b2e565b91505092915050565b600080600080600060a08688031215610bfb57610bfa6110fe565b5b6000610c0988828901610b43565b9550506020610c1a88828901610b04565b9450506040610c2b88828901610b2e565b9350506060610c3c88828901610b2e565b9250506080610c4d88828901610b43565b9150509295509295909350565b610c6381610f67565b82525050565b610c7281610fc3565b82525050565b6000610c85601b83610d5e565b9150610c9082611103565b602082019050919050565b6000610ca8600083610d53565b9150610cb38261112c565b600082019050919050565b610cc781610fa3565b82525050565b6000610cd882610c9b565b9150819050919050565b6000602082019050610cf76000830184610c5a565b92915050565b6000602082019050610d126000830184610c69565b92915050565b60006020820190508181036000830152610d3181610c78565b9050919050565b6000602082019050610d4d6000830184610cbe565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610d7a82610fa3565b9150610d8583610fa3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610dba57610db9611042565b5b828201905092915050565b6000610dd082610fa3565b9150610ddb83610fa3565b925082610deb57610dea611071565b5b828204905092915050565b6000610e0182610f79565b9150610e0c83610f79565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e4b57610e4a611042565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e8857610e87611042565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ec557610ec4611042565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f0257610f01611042565b5b828202905092915050565b6000610f1882610fa3565b9150610f2383610fa3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f5c57610f5b611042565b5b828202905092915050565b6000610f7282610f83565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610fce82610fd5565b9050919050565b6000610fe082610fe7565b9050919050565b6000610ff282610f83565b9050919050565b600061100482610fa3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561103757611036611042565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b50565b61113881610f67565b811461114357600080fd5b50565b61114f81610f79565b811461115a57600080fd5b50565b61116681610fa3565b811461117157600080fd5b50565b61117d81610fad565b811461118857600080fd5b5056fea2646970667358221220e5271cfc67219e5eb54296690270f6f5285ff6d096766b6401077c5ded1d23ff64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c8063893d20e811610059578063893d20e8146101355780639e87a5cd14610160578063b60d42881461018b578063be2693f014610195578063d7b4750c146101ac57610086565b80630343fb251461008b5780630d8e6e2c146100c85780633ccfd60b146100f35780636b69a5921461010a575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b58565b6101e9565b6040516100bf9190610d38565b60405180910390f35b3480156100d457600080fd5b506100dd610232565b6040516100ea9190610d38565b60405180910390f35b3480156100ff57600080fd5b506101086102d8565b005b34801561011657600080fd5b5061011f610503565b60405161012c9190610d38565b60405180910390f35b34801561014157600080fd5b5061014a610510565b6040516101579190610ce2565b60405180910390f35b34801561016c57600080fd5b50610175610538565b6040516101829190610cfd565b60405180910390f35b610193610561565b005b3480156101a157600080fd5b506101aa61069a565b005b3480156101b857600080fd5b506101d360048036038101906101ce9190610b85565b610924565b6040516101e09190610ce2565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561029b57600080fd5b505afa1580156102af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d39190610bb2565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035d576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60028054905081101561040957600060028281548110610383576103826110a0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040190610ff9565b915050610360565b50600067ffffffffffffffff811115610425576104246110cf565b5b6040519080825280602002602001820160405280156104535781602001602082028036833780820191505090505b5060029080519060200190610469929190610a48565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516104b090610ccd565b60006040518083038185875af1925050503d80600081146104ed576040519150601f19603f3d011682016040523d82523d6000602084013e6104f2565b606091505b505090508061050057600080fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b188000061059e60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461096c90919063ffffffff16565b10156105df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d690610d18565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461062e9190610d6f565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461071f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060028054806020026020016040519081016040528092919081815260200182805480156107a357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610759575b5050505050905060005b81518110156108295760008282815181106107cb576107ca6110a0565b5b60200260200101519050600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205050808061082190610ff9565b9150506107ad565b50600067ffffffffffffffff811115610845576108446110cf565b5b6040519080825280602002602001820160405280156108735781602001602082028036833780820191505090505b5060029080519060200190610889929190610a48565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108d090610ccd565b60006040518083038185875af1925050503d806000811461090d576040519150601f19603f3d011682016040523d82523d6000602084013e610912565b606091505b505090508061092057600080fd5b5050565b60006002828154811061093a576109396110a0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610978836109a8565b90506000670de0b6b3a764000085836109919190610f0d565b61099b9190610dc5565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109f157600080fd5b505afa158015610a05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a299190610bdf565b5050509150506402540be40081610a409190610df6565b915050919050565b828054828255906000526020600020908101928215610ac1579160200282015b82811115610ac05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a68565b5b509050610ace9190610ad2565b5090565b5b80821115610aeb576000816000905550600101610ad3565b5090565b600081359050610afe8161112f565b92915050565b600081519050610b1381611146565b92915050565b600081359050610b288161115d565b92915050565b600081519050610b3d8161115d565b92915050565b600081519050610b5281611174565b92915050565b600060208284031215610b6e57610b6d6110fe565b5b6000610b7c84828501610aef565b91505092915050565b600060208284031215610b9b57610b9a6110fe565b5b6000610ba984828501610b19565b91505092915050565b600060208284031215610bc857610bc76110fe565b5b6000610bd684828501610b2e565b91505092915050565b600080600080600060a08688031215610bfb57610bfa6110fe565b5b6000610c0988828901610b43565b9550506020610c1a88828901610b04565b9450506040610c2b88828901610b2e565b9350506060610c3c88828901610b2e565b9250506080610c4d88828901610b43565b9150509295509295909350565b610c6381610f67565b82525050565b610c7281610fc3565b82525050565b6000610c85601b83610d5e565b9150610c9082611103565b602082019050919050565b6000610ca8600083610d53565b9150610cb38261112c565b600082019050919050565b610cc781610fa3565b82525050565b6000610cd882610c9b565b9150819050919050565b6000602082019050610cf76000830184610c5a565b92915050565b6000602082019050610d126000830184610c69565b92915050565b60006020820190508181036000830152610d3181610c78565b9050919050565b6000602082019050610d4d6000830184610cbe565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610d7a82610fa3565b9150610d8583610fa3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610dba57610db9611042565b5b828201905092915050565b6000610dd082610fa3565b9150610ddb83610fa3565b925082610deb57610dea611071565b5b828204905092915050565b6000610e0182610f79565b9150610e0c83610f79565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e4b57610e4a611042565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e8857610e87611042565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ec557610ec4611042565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610f0257610f01611042565b5b828202905092915050565b6000610f1882610fa3565b9150610f2383610fa3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f5c57610f5b611042565b5b828202905092915050565b6000610f7282610f83565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610fce82610fd5565b9050919050565b6000610fe082610fe7565b9050919050565b6000610ff282610f83565b9050919050565b600061100482610fa3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561103757611036611042565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b50565b61113881610f67565b811461114357600080fd5b50565b61114f81610f79565b811461115a57600080fd5b50565b61116681610fa3565b811461117157600080fd5b50565b61117d81610fad565b811461118857600080fd5b5056fea2646970667358221220e5271cfc67219e5eb54296690270f6f5285ff6d096766b6401077c5ded1d23ff64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getAddressToAmountFunded(address)": {
        "params": {
          "fundingAddress": "the addres of funder"
        },
        "returns": {
          "_0": "the amount fundend"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "notice funds our contract based on the ETH/USD price"
      },
      "getAddressToAmountFunded(address)": {
        "notice": "gets the amount that an address has funded"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 69,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}